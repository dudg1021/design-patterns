https://juejin.cn/post/6844903695667167240

https://blog.csdn.net/ThinkWon/article/details/103592572?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522165778958316781647586371%2522%252C%2522scm%2522%253A%252220140713.130102334.pc%255Fall.%2522%257D&request_id=165778958316781647586371&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~first_rank_ecpm_v1~hot_rank-1-103592572-null-null.142^v32^new_blog_pos_by_title,185^v2^tag_show&utm_term=%E9%80%82%E9%85%8D%E5%99%A8%E6%A8%A1%E5%BC%8F%E6%80%BB%E7%BB%93&spm=1018.2226.3001.4187


创建型模式：

创建型模式总体上比较简单，它们的作用就是为了产生实例对象，算是各种工作的第一步了，因为我们写的是面向对象的代码，所以我们第一步当然是需要创建一个对象了。
简单工厂模式最简单；
工厂方法模式在简单工厂模式的基础上增加了选择工厂的维度，需要第一步选择合适的工厂；
抽象工厂模式有产品族的概念，如果各个产品是存在兼容性问题的，就要用抽象工厂模式。
单例模式就不说了，为了保证全局使用的是同一对象，一方面是安全性考虑，一方面是为了节省资源；建造者模式专门对付属性很多的那种类，为了让代码更优美；
原型模式用得最少，了解和 Object 类中的 clone() 方法相关的知识即可。

